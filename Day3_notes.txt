// You are using Java
class Main{
    
    public static void main(String args[]){
        
        String s1 = new String("hello");//using new operator
        
        String s2="world"; //string literal
        
        System.out.println("before change : "+s1);
        
        s1=s1.concat(" welcome");
        
        System.out.println("after change : "+s1);
        
        
        String s3= new String("hi");
        String s4="hi";
        String s5= new String("hi");
        
        System.out.println(s3==s5);//false//=== operator will compare the address(hashCode) not the EnumConstantNotPresentException
        
        System.out.println(s3.equals(s5));// equals/equalsIngnoreCase to compare the content in the String
        
        String s6="hi";
        
        System.out.println(s4==s6);//true
        
        
    }
    
}
=======================================
// You are using Java
class Main{
    
    public static void main(String args[]){
                        //index 0123456789 
        String s1 = new String("helloWorld");
        
        //getting the data based on index position we can go for char charAt();
       char ch= s1.charAt(5);
       System.out.println("index position at 5 the character : "+ch);
       
       //char[] toCharArray() => to convert the String into Char array.
        System.out.println("converted string into char array");
      char ch1[]= s1.toCharArray();
      for(char c:ch1){
          System.out.print(c+" ");
      }
      System.out.println("");
      
      String s2 = "heLLo World";
      System.out.println("Upper Case : "+s2.toUpperCase());
      System.out.println("Lower Case : "+s2.toLowerCase());
      
      //String substring(startindex,endIndex) //Note: endIndex ->excluded
      String s3 ="today is the beautiful day";
      
     String extractedString= s3.substring(13,22);
     System.out.println("substring from the range 13 to 22: "+extractedString);
     //to remove the spaces from the bothe leading and trailing spaces
     // String trim();
     
     String s4 ="   helloWorld   ";
     System.out.println("before trim: "+s4);
     
     System.out.println("after trim: "+s4.trim());
     // String[] split();
     String line ="bigdata the data is which unable to store and unable to process";
     
     String spt[]=line.split(" ");
     System.out.println(spt[7]);
     
     System.out.println("Convert the lines into words");
     for(String s:spt){
        System.out.println(s); 
     }
     
    
        }    
    
    
}

=============================
// You are using Java

class Main{
    
    public static void main(String args[]){
        
        String s1=new String("hello world");
        //replace a character.
        
        System.out.println("replace at character o to d : "+s1.replace('o','d'));
        
        String s2="hello  world  welcome  ravi";
        
        System.out.println("After replace a line : "+s2.replace("  "," "));
            
        
        String s3="welcome";
        
        System.out.println(s3.replace('e','d'));//wdlcomd
    
        
       String s="welcome";
       StringBuilder sb = new StringBuilder(s);//convert string to StringBuilder Object
       
       String rev= sb.reverse().toString(); //convert StringBuilder to  String object
        System.out.println("Reverse string is : "+rev);
        
        
    String s4="Helloword";
    System.out.println("length of the string : "+s4.length()); //9
    
    String reverseString="";
    String word="";

    for(int i=s4.length()-1;i>=0;i--){
             word=word+s4.charAt(i);
    }
    System.out.println("reverse string of helloworld : "+word);
    
    String st = "Hello world welcome"; //reverse line of words => olleh dlrow emoclew
    String st1[] = st.split(" ");
    
    for(int i=0;i<st1.length;i++){
        word=st1[i];
        String reverseWord="";
      for(int j=word.length()-1;j>=0;j--){
             reverseWord=reverseWord+word.charAt(j);
       }
       reverseString=reverseString+reverseWord+" ";
    }
    System.out.println("reverse of an line of words");
    System.out.println(reverseString);
    
    
    
        }


}


================
StringBuilder:
==============
class Main{
    
    public static void main(String args[]){
     
       StringBuilder sb = new StringBuilder("ramu");
       
      System.out.println(sb);
     sb.append(" ");
     sb.append("smith");
        sb.append(" ");
     sb.append("martin");
        sb.append(" ");
     sb.append("john doe");
        sb.append(" ");
     sb.append("Riya");
     
   System.out.println(sb);
   
   //ramu smith martin john doe Riya
   
      sb.insert(10," scott ");
      
       System.out.println("after insert at index position: "+sb);
        
    }
    
    
    
}
=========================

// You are using Java
//patterns
//[a-z] -- it will accept only one character at a time from a to z
//[A-Z] -->it will represent only one character at a time from A to z
//[0-9] or \\d it will accept any number 0 to 9

//quantifers:
//=============
//  +  --> alteast one time occurance of pattern and many time
//  *  --> zero or many time occurance of pattern
//  ?  ->  zero or one time  occurance a pattern
//  {n} -> number of occurance of pattern 
//   \\s -> single space
// {min,max} -> min and max no.of occurance of pattern

//write a regular expression pattern  to valid the mobileNO
// string regex = "[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]";
   //or String regex = "[0-9]{10}"
   //to check user input with regexpattern matched or not  we need use boolean matches(regex);

import java.util.*;
class Main{
    
      public static void main(String args[]){
          Scanner sc = new Scanner(System.in);
          String mbno=sc.next();
          String regex="[0-9]{10}";
          
         boolean b = mbno.matches(regex);
         
         if(b){
             System.out.println("MobileNumber is Valid");
         }else {
             System.out.println("MobileNumber is not valid");
         }
          
      }
    
}
