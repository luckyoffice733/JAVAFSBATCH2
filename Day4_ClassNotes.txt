// public int addition(int a,int b){
// }
// // addition(int,int)  --> methodSignature 
// public String getMessage(String a,float b){
// }
// //getMessage(String,float); -->methodSignature;


class Test{
    public void addition(int x,int y){
        int z = x+y;
        System.out.println("sum of two numbers(int) is : "+z);
    }
    public void addition(int x,int y,int z){//difference no.of parameters
        int c = x+y+z;
        System.out.println("sum of three of (int)numbers is : "+c);
    }
    
    public void addition(float x,float y){//difference in the type of parameter
        float c = x+y;
        System.out.println("sum of two numbers(float) is : "+c);
    }
    
    public double addition(double x,double y){
        System.out.println("we are in the double type overload method");
        return x+y;
    }
    
    public void methodOne(int s){
        System.out.println("we are in methodOne(int) "+s);
    }

}
class Main{
    public static void main(String args[]){
        
        Test tobj = new Test();
        tobj.addition(10,40);//addition(int,int);
        tobj.addition(10.0f,40.0F);//addition(float,float);
        
        tobj.methodOne('d');//methodOne(char);-->type promotion -> methodOne(int)->methodOne(float)
                              ///methodOne(double);
        
    }
    
}

=====================================
// You are using Java
class Person{
    public void methodOne(){
        System.out.println("we are in parent class methodOne");
    }
}
class Employee extends Person{
    
    public void methodTwo(){
        System.out.println("we are in Employee child class: ");
    }
    
}
class Main{
    
    public static void main(String args[]){
        Employee e = new Employee();
        e.methodTwo();
        e.methodOne();
    }
    
}

====
2nd example using super keyword:
================================
// You are using Java
class Person{
    public void methodOne(){
        System.out.println("we are in parent class methodOne");
    }
}
class Employee extends Person{
    
    public void methodTwo(){
        System.out.println("we are in Employee child class: ");
    }
    
}
class Main{
    
    public static void main(String args[]){
        Employee e = new Employee();
        e.methodTwo();
        e.methodOne();
    }
    
}

============================

session3:
=========
1:
---
// You are using Java
import java.util.Scanner;
class Person{
    private String firstName;
     private String lastName;
    
    Person(String firstName,String lastName){
        this.firstName=firstName;
        this.lastName=lastName;
    }
    
    public void setFirstName(String firstName){
        this.firstName=firstName;
    }
    public String getFirstName(){
       return this.firstName;
    }    
    
     public void setLastName(String lastName){
        this.lastName=lastName;
    }
    public String getLastName(){
       return this.lastName;
    }    
}
class Employee extends Person{
     private int employeeId;
     private String jobTitle;
     
     Employee(int employeeId,String jobTitle,String firstName,String lastName){
        super(firstName,lastName);
        this.employeeId=employeeId;
        this.jobTitle=jobTitle;
     }
     
     public void setEmployeeId(int employeeId){
         this.employeeId=employeeId;
     }
     public int getEmployeeId(){
         return this.employeeId;
     }
     public void setJobTitle(String jobTitle){
         this.jobTitle=jobTitle;
     }
     public String getJobTitle(){
         return this.jobTitle;
     }
}
class Main{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        String fname = sc.nextLine();
        String lname = sc.nextLine();
        int empId =sc.nextInt();
        sc.nextLine();
        String  jbTitle = sc.nextLine();
        Employee eobj = new Employee(empId,jbTitle,fname,lname);
        System.out.println("Employee details:");
        System.out.println("Name: "+eobj.getFirstName()+" "+eobj.getLastName()+", "+eobj.getJobTitle());
        System.out.println("Employee ID: "+eobj.getEmployeeId());    
    }
}








